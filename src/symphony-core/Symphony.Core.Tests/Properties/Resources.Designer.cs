//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Symphony.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Symphony.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DAQController &quot;Symphony.Core.Tests,Symphony.Core.SimpleDAQController&quot;
        ///[
        ///	Provides Clock &quot;HekkaClock&quot;
        ///	Clock &quot;HekkaClock&quot;
        ///	Configuration
        ///	[
        ///		key1 &quot;value1&quot;
        ///		key2 &quot;value2&quot;
        ///	]
        ///	InputStream &quot;In0&quot; &quot;Symphony.Core.DAQInputStream&quot;
        ///	[
        ///		Clock &quot;HekkaClock&quot;
        ///		Configuration
        ///		[
        ///			MeasurementConversionTarget &quot;units&quot;
        ///		]
        ///		SampleRate 1000 Hz
        ///	]
        ///	OutputStream &quot;Out0&quot; &quot;Symphony.Core.DAQOutputStream&quot;
        ///	[
        ///		Clock &quot;HekkaClock&quot;
        ///		Configuration
        ///		[
        ///			MeasurementConversionTarget &quot;units&quot;
        ///		]
        ///		SampleRate [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ControllerBlock {
            get {
                return ResourceManager.GetString("ControllerBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller
        ///[
        ///	Clock &quot;CLOCK&quot;
        ///	DAQController &quot;Symphony.Core.Tests,Symphony.Core.SimpleDAQController&quot;
        ///	[
        ///		Provides Clock &quot;HekkaClock&quot;
        ///		Clock &quot;HekkaClock&quot;
        ///		Configuration
        ///		[
        ///			key1 &quot;value1&quot;
        ///			key2 &quot;value2&quot;
        ///		]
        ///		InputStream &quot;In0&quot; &quot;Symphony.Core.DAQInputStream&quot;
        ///		[
        ///			Clock &quot;HekkaClock&quot;
        ///			Configuration
        ///			[
        ///				MeasurementConversionTarget &quot;units&quot;
        ///			]
        ///			SampleRate 1000 Hz
        ///		]
        ///		OutputStream &quot;Out0&quot; &quot;Symphony.Core.DAQOutputStream&quot;
        ///		[
        ///			Clock &quot;HekkaClock&quot;
        ///			Configuration
        ///			[
        ///			 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CoreControllerBlock {
            get {
                return ResourceManager.GetString("CoreControllerBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string EpochXML {
            get {
                return ResourceManager.GetString("EpochXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ExternalDevice &quot;LED&quot; &quot;Symphony.Core.ExternalDevice&quot;
        ///[
        ///	Clock &quot;CLOCK&quot;
        ///	Background 1 V
        ///	Bind &quot;In0&quot;
        ///	Bind &quot;In1&quot;
        ///	Connect (&quot;In0&quot; &quot;In1&quot;)
        ///	Configuration
        ///	[
        ///		key1 &quot;value1&quot;
        ///		key2 &quot;value2&quot; key3 &quot;value3&quot;
        ///	]
        ///].
        /// </summary>
        internal static string ExternalDeviceBlock {
            get {
                return ResourceManager.GetString("ExternalDeviceBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller
        ///[
        ///	Clock &quot;HekkaClock&quot;
        ///	
        ///	DAQController &quot;Symphony.Core.Tests,Symphony.Core.SimpleDAQController&quot;
        ///	[
        ///		Provides Clock &quot;HekkaClock&quot;
        ///		Clock &quot;HekkaClock&quot;
        ///		Configuration
        ///		[
        ///			key1 &quot;value1&quot;
        ///			key2 &quot;value2&quot;
        ///		]
        ///		InputStream &quot;In0&quot; &quot;Symphony.Core.DAQInputStream&quot;
        ///		[
        ///			Clock &quot;HekkaClock&quot;
        ///			Configuration
        ///			[
        ///				MeasurementConversionTarget &quot;units&quot;
        ///			]
        ///			SampleRate 1000 Hz
        ///		]
        ///		InputStream &quot;In1&quot; &quot;Symphony.Core.DAQInputStream&quot;
        ///		[
        ///			Clock &quot;HekkaClock&quot;
        ///			Configuration
        ///			[ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MinimalRigConfig {
            get {
                return ResourceManager.GetString("MinimalRigConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VideoController
        ///[
        ///	Provides Clock &quot;CLOCK&quot;
        ///	Clock &quot;CLOCK&quot;
        ///	Configuration
        ///	[
        ///		key1 &quot;value1&quot;
        ///		key2 &quot;value2&quot; key3 &quot;value3&quot;
        ///	]
        ///].
        /// </summary>
        internal static string VideoBlock {
            get {
                return ResourceManager.GetString("VideoBlock", resourceCulture);
            }
        }
    }
}
